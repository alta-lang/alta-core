#ifndef ALTACORE_AST_HPP
#define ALTACORE_AST_HPP

#include "ast-shared.hpp"

#include "ast/node.hpp"
#include "ast/statement-node.hpp"
#include "ast/expression-node.hpp"
#include "ast/root-node.hpp"
#include "ast/expression-statement.hpp"
#include "ast/type.hpp"
#include "ast/parameter.hpp"
#include "ast/block-node.hpp"
#include "ast/function-definition-node.hpp"
#include "ast/return-directive-node.hpp"
#include "ast/integer-literal-node.hpp"
#include "ast/variable-definition-expression.hpp"
#include "ast/accessor.hpp"
#include "ast/fetch.hpp"
#include "ast/assignment-expression.hpp"
#include "ast/boolean-literal-node.hpp"
#include "ast/binary-operation.hpp"
#include "ast/import-statement.hpp"
#include "ast/function-call-expression.hpp"
#include "ast/string-literal-node.hpp"
#include "ast/function-declaration-node.hpp"
#include "ast/attribute-node.hpp"
#include "ast/literal-node.hpp"
#include "ast/attribute-statement.hpp"
#include "ast/conditional-statement.hpp"
#include "ast/conditional-expression.hpp"
#include "ast/class-definition-node.hpp"
#include "ast/class-statement-node.hpp"
#include "ast/class-member-definition-statement.hpp"
#include "ast/class-method-definition-statement.hpp"
#include "ast/class-special-method-definition-statement.hpp"
#include "ast/class-instantiation-expression.hpp"
#include "ast/pointer-expression.hpp"
#include "ast/dereference-expression.hpp"
#include "ast/while-loop-statement.hpp"
#include "ast/cast-expression.hpp"
#include "ast/class-read-accessor-definition-statement.hpp"
#include "ast/character-literal-node.hpp"
#include "ast/type-alias-statement.hpp"
#include "ast/subscript-expression.hpp"
#include "ast/retrieval-node.hpp"
#include "ast/super-class-fetch.hpp"
#include "ast/instanceof-expression.hpp"
#include "ast/generic.hpp"
#include "ast/for-loop-statement.hpp"
#include "ast/ranged-for-loop-statement.hpp"
#include "ast/unary-operation.hpp"
#include "ast/sizeof-operation.hpp"
#include "ast/floating-point-literal-node.hpp"
#include "ast/structure-definition-statement.hpp"
#include "ast/export-statement.hpp"
#include "ast/variable-declaration-statement.hpp"
#include "ast/alias-statement.hpp"
#include "ast/delete-statement.hpp"
#include "ast/control-directive.hpp"
#include "ast/try-catch-block.hpp"
#include "ast/throw-statement.hpp"
#include "ast/nullptr-expression.hpp"
#include "ast/code-literal-node.hpp"
#include "ast/bitfield-definition-node.hpp"
#include "ast/lambda-expression.hpp"
#include "ast/special-fetch-expression.hpp"
#include "ast/class-operator-definition-statement.hpp"
#include "ast/enumeration-definition-statement.hpp"
#include "ast/yield-expression.hpp"
#include "ast/assertion-statement.hpp"

#endif // ALTACORE_AST_HPP
